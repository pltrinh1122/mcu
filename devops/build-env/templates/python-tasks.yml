version: '3'

# Python-specific tasks for dependency management, testing, and building
# These tasks assume a virtual environment is already set up

tasks:
  python-setup:
    desc: "Python setup - installs Python dependencies from requirements files"
    cmds:
      - echo "Installing Python dependencies..."
      - source venv/bin/activate
      - pip install --upgrade pip
      - |
        if [ -f "requirements/requirements.txt" ]; then
          pip install -r requirements/requirements.txt
        fi
      - |
        if [ -f "requirements/requirements-dev.txt" ]; then
          pip install -r requirements/requirements-dev.txt
        fi
      - |
        if [ -f "requirements/requirements-test.txt" ]; then
          pip install -r requirements/requirements-test.txt
        fi
      - echo "Python setup completed!"

  install:
    desc: "Python install - installs the current package in development mode"
    cmds:
      - echo "Installing package in development mode..."
      - source venv/bin/activate
      - |
        if [ -f "setup.py" ]; then
          pip install -e .
        elif [ -f "pyproject.toml" ]; then
          pip install -e .
        else
          echo "No setup.py or pyproject.toml found for installation"
        fi
      - echo "Package installation completed!"

  test:
    desc: "Python test - runs pytest with coverage"
    cmds:
      - echo "Running Python tests..."
      - source venv/bin/activate
      - |
        if [ -d "tests" ]; then
          pytest tests/ --cov=. --cov-report=html --cov-report=term
        else
          echo "No tests directory found"
        fi
      - echo "Python tests completed!"

  test-unit:
    desc: "Python unit tests - runs only unit tests"
    cmds:
      - echo "Running unit tests..."
      - source venv/bin/activate
      - |
        if [ -d "tests" ]; then
          pytest tests/unit/ --cov=. --cov-report=term
        else
          echo "No tests/unit directory found"
        fi
      - echo "Unit tests completed!"

  test-integration:
    desc: "Python integration tests - runs only integration tests"
    cmds:
      - echo "Running integration tests..."
      - source venv/bin/activate
      - |
        if [ -d "tests" ]; then
          pytest tests/integration/ --cov=. --cov-report=term
        else
          echo "No tests/integration directory found"
        fi
      - echo "Integration tests completed!"

  python-build:
    desc: "Python build - creates distribution packages"
    cmds:
      - echo "Building Python package..."
      - source venv/bin/activate
      - |
        if [ -f "setup.py" ]; then
          python setup.py sdist bdist_wheel
        elif [ -f "pyproject.toml" ]; then
          python -m build
        else
          echo "No setup.py or pyproject.toml found for building"
        fi
      - echo "Python build completed!"

  quality:
    desc: "Python quality - runs code quality checks (black, flake8, mypy)"
    cmds:
      - echo "Running Python quality checks..."
      - source venv/bin/activate
      - |
        if command -v black >/dev/null 2>&1; then
          echo "Running black..."
          black . --check
        else
          echo "black not installed, skipping"
        fi
      - |
        if command -v flake8 >/dev/null 2>&1; then
          echo "Running flake8..."
          flake8 .
        else
          echo "flake8 not installed, skipping"
        fi
      - |
        if command -v mypy >/dev/null 2>&1; then
          echo "Running mypy..."
          mypy .
        else
          echo "mypy not installed, skipping"
        fi
      - echo "Python quality checks completed!"

  format:
    desc: "Python format - formats code with black and isort"
    cmds:
      - echo "Formatting Python code..."
      - source venv/bin/activate
      - |
        if command -v black >/dev/null 2>&1; then
          echo "Running black..."
          black .
        else
          echo "black not installed, skipping"
        fi
      - |
        if command -v isort >/dev/null 2>&1; then
          echo "Running isort..."
          isort .
        else
          echo "isort not installed, skipping"
        fi
      - echo "Python formatting completed!"

  lint:
    desc: "Python lint - runs linting tools"
    cmds:
      - echo "Running Python linting..."
      - source venv/bin/activate
      - |
        if command -v pylint >/dev/null 2>&1; then
          echo "Running pylint..."
          pylint src/ tests/
        else
          echo "pylint not installed, skipping"
        fi
      - |
        if command -v bandit >/dev/null 2>&1; then
          echo "Running bandit..."
          bandit -r src/
        else
          echo "bandit not installed, skipping"
        fi
      - echo "Python linting completed!"

  deps:
    desc: "Python deps - shows installed dependencies"
    cmds:
      - echo "Installed Python dependencies:"
      - source venv/bin/activate
      - pip list

  update-deps:
    desc: "Python update-deps - updates dependencies to latest versions"
    cmds:
      - echo "Updating Python dependencies..."
      - source venv/bin/activate
      - pip install --upgrade pip
      - |
        if [ -f "requirements/requirements.txt" ]; then
          pip install --upgrade -r requirements/requirements.txt
        fi
      - echo "Dependencies updated!"
